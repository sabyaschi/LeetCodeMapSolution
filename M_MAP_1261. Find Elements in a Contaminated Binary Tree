/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class FindElements {
    TreeNode tRoot;
    public static void treeElements(TreeNode root){
        if(root == null)return;
        int x = root.val;
        if(root.left!=null) root.left.val = 2*x+1;
        if(root.right!=null) root.right.val = 2*x+2;
        treeElements(root.left);
        treeElements(root.right);
    }

    public static boolean check(TreeNode root , int target){
        if(root==null)return false;
        if(root.val == target)return true;

        return check(root.left,target) || check(root.right,target);
    }

    public FindElements(TreeNode root) {
        tRoot = root;
        tRoot.val = 0;
        treeElements(tRoot);
    }
    
    public boolean find(int target) {
        return check(tRoot,target);
    }
}

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements obj = new FindElements(root);
 * boolean param_1 = obj.find(target);
 */
